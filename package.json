{
  "name": "finalforum",
  "version": "1.0.0",
  "description": "FinalForum - yet another web forum",
  "main": "index.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "---- Quickstart: Run and watch the entire stack": "",
    "start": "npm-run-all client:clean --parallel client:watch dev:server:quickstart",
    "---- Client scripts ----": "",
    "client:clean": "rimraf dist",
    "client:build": "rollup -c",
    "client:watch": "rollup -c -w",
    "---- Server scripts without environment variables (see implementations below) ----": "",
    "server:start": "node index.js",
    "server:watch": "nodemon index.js",
    "server:healthcheck": "until $(curl --output /dev/null --silent --head --fail -H \"X-API-Key: ${API_KEY}\" http://localhost:${PORT}/api/v1/auth/private/health); do sleep 1; done",
    "---- Server scripts: Dev implementation ----": "",
    "dev:server:start": "cross-env API_KEY=secret PORT=3000 PGHOST=localhost PGPORT=5433 PGDATABASE=finalforum PGUSER=finalforum PGPASSWORD=finalforum SESSION_TTL=44640 PASSWORD_RESET_TTL=15 SECURE_COOKIES=false npm run server:start",
    "dev:server:watch": "cross-env API_KEY=secret PORT=3000 PGHOST=localhost PGPORT=5433 PGDATABASE=finalforum PGUSER=finalforum PGPASSWORD=finalforum SESSION_TTL=44640 PASSWORD_RESET_TTL=15 SECURE_COOKIES=false npm run server:watch",
    "dev:server:healthcheck": "cross-env API_KEY=secret PORT=3000 npm run server:healthcheck",
    "---- All-in-one dev environment (server, database, restart on code change) ----": "",
    "dev:server:quickstart": "npm run dev:db:start && npm run dev:db:healthcheck && npm run dev:db:migrate && npm run dev:server:watch && npm run dev:db:pause",
    "---- Server scripts: Test implementation ----": "",
    "test:server:start": "cross-env API_KEY=secret PORT=4000 PGHOST=localhost PGPORT=5432 PGDATABASE=finalforum PGUSER=finalforum PGPASSWORD=finalforum SESSION_TTL=44640 PASSWORD_RESET_TTL=15 SECURE_COOKIES=false npm run server:start",
    "test:server:watch": "cross-env API_KEY=secret PORT=4000 PGHOST=localhost PGPORT=5432 PGDATABASE=finalforum PGUSER=finalforum PGPASSWORD=finalforum SESSION_TTL=44640 PASSWORD_RESET_TTL=15 SECURE_COOKIES=false npm run server:watch",
    "test:server:healthcheck": "cross-env API_KEY=secret PORT=4000 npm run server:healthcheck",
    "---- Test runners ----": "",
    "test:run": "cross-env API_KEY=secret PORT=4000 PGHOST=localhost PGPORT=5432 PGDATABASE=finalforum PGUSER=finalforum PGPASSWORD=finalforum jest",
    "---- All-in-one integration test runner (local only, not for CI) ----": "",
    "test:integration:quickstart": "./test/integration-tests.sh",
    "---- All-in-one test runner (local only, not for CI) ----": "",
    "test:quickstart": "npm run test:unit && npm run test:integration:quickstart",
    "---- Database scripts without environment variables (see implementations below) ----": "",
    "db:start": "docker-compose -f .docker/docker-compose.yml up -d",
    "db:migrate": "node migrate",
    "db:healthcheck": "TIMEOUT=30 ./.ci/pg-healthcheck.js",
    "db:pause": "docker-compose -f .docker/docker-compose.yml stop",
    "db:destroy": "docker-compose -f .docker/docker-compose.yml down",
    "---- Database scripts: Dev implementation ----": "",
    "dev:db:start": "cross-env DB_PORT=5433 DB_CONTAINER_NAME=postgres-final-forum npm run db:start",
    "dev:db:migrate": "cross-env DB_HOST=localhost DB_PORT=5433 POSTGRES_DB=postgres POSTGRES_USER=postgres POSTGRES_PASSWORD=postgres MIGRATION_USER=finalforum MIGRATION_PASSWORD=finalforum APP_DB=finalforum APP_USER=finalforum_api APP_PASSWORD=finalforum_api npm run db:migrate",
    "dev:db:healthcheck": "cross-env PGHOST=localhost PGPORT=5433 PGDATABASE=postgres PGUSER=postgres PGPASSWORD=postgres npm run db:healthcheck",
    "dev:db:pause": "cross-env DB_PORT=5433 DB_CONTAINER_NAME=postgres-final-forum npm run db:pause",
    "dev:db:destroy": "cross-env DB_PORT=5433 DB_CONTAINER_NAME=postgres-final-forum npm run db:destroy",
    "---- Database scripts: Test implementation ----": "",
    "test:db:start": "cross-env DB_PORT=5432 DB_CONTAINER_NAME=postgres-final-forum-test npm run db:start",
    "test:db:migrate": "cross-env DB_HOST=localhost DB_PORT=5432 POSTGRES_DB=postgres POSTGRES_USER=postgres POSTGRES_PASSWORD=postgres MIGRATION_USER=finalforum MIGRATION_PASSWORD=finalforum APP_DB=finalforum APP_USER=finalforum_api APP_PASSWORD=finalforum_api npm run db:migrate",
    "test:db:healthcheck": "cross-env PGHOST=localhost PGPORT=5432 PGDATABASE=postgres PGUSER=postgres PGPASSWORD=postgres npm run db:healthcheck",
    "test:db:pause": "cross-env DB_PORT=5432 DB_CONTAINER_NAME=postgres-final-forum-test npm run db:pause",
    "test:db:destroy": "cross-env DB_PORT=5432 DB_CONTAINER_NAME=postgres-final-forum-test npm run db:destroy",
    "---- Linting ----": "",
    "lint": "eslint src/**/*.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/finalforum/finalforum.git"
  },
  "author": "Steve Taylor",
  "license": "GPL-2.0-or-later",
  "bugs": {
    "url": "https://github.com/finalforum/finalforum/issues"
  },
  "homepage": "https://github.com/finalforum/finalforum#readme",
  "jest": {
    "collectCoverage": true,
    "collectCoverageFrom": [
      "src/**/*.js"
    ],
    "coverageReporters": [
      "json",
      "lcov",
      "text"
    ],
    "snapshotSerializers": [
      "./test/serializers/render-to-html-serializer"
    ]
  },
  "dependencies": {
    "@isoreact/core": "^4.0.1",
    "babel-register": "^6.26.0",
    "bcrypt": "^3.0.0",
    "cookie-parser": "^1.4.3",
    "cuid": "^2.1.1",
    "draft-js": "^0.10.5",
    "express": "^4.16.3",
    "hbs": "^4.0.1",
    "lodash": "^4.17.10",
    "pg": "^7.4.3",
    "prop-types": "^15.6.2",
    "react": "^16.4.2",
    "react-dom": "^16.4.2",
    "rxjs": "^6.2.2",
    "styled-components": "3.4.0",
    "superagent": "^3.8.3"
  },
  "devDependencies": {
    "babel-core": "^6.26.3",
    "babel-eslint": "^8.2.6",
    "babel-plugin-external-helpers": "^6.22.0",
    "babel-plugin-styled-components": "^1.5.1",
    "babel-plugin-transform-class-properties": "^6.24.1",
    "babel-plugin-transform-object-rest-spread": "^6.26.0",
    "babel-preset-env": "^1.7.0",
    "babel-preset-minify": "^0.4.3",
    "babel-preset-react": "^6.24.1",
    "cross-env": "^5.2.0",
    "eslint": "^5.3.0",
    "eslint-plugin-filenames": "^1.3.2",
    "eslint-plugin-import": "^2.13.0",
    "eslint-plugin-react": "^7.10.0",
    "fs-default-project-config": "^9.0.0",
    "jest": "^23.4.2",
    "nodemon": "^1.18.3",
    "npm-run-all": "^4.1.3",
    "postgrator": "^3.6.0",
    "pretty": "^2.0.0",
    "rimraf": "^2.6.2",
    "rollup": "^0.63.4",
    "rollup-plugin-babel": "^3.0.7",
    "rollup-plugin-commonjs": "^9.1.4",
    "rollup-plugin-node-builtins": "^2.1.2",
    "rollup-plugin-node-globals": "^1.2.1",
    "rollup-plugin-node-resolve": "^3.3.0",
    "rollup-plugin-replace": "^2.0.0",
    "rollup-plugin-sourcemaps": "^0.4.2",
    "rollup-plugin-terser": "^1.0.1"
  }
}
